<<<<<<< HEAD
arc_dataset <- rbind(arc_dataset, gcIntermediate(c(final_map_data$wlong[i],final_map_data$wlat[i]), c(137,-23.2), n=50, addStartEnd=TRUE, breakAtDateLine=F))
# %>%
# addPolylines(weight=1, opacity=3, color="white")
}
arc_dataset <- data.frame()
for (i in 1:nrow(final_map_data)){
# connection_map <- connection_map %>%
arc_dataset <- rbind(arc_dataset, gcIntermediate(c(final_map_data$wlong[i],final_map_data$wlat[i]), c(137,-23.2), n=50, addStartEnd=TRUE, breakAtDateLine=F))
# %>%
# addPolylines(weight=1, opacity=3, color="white")
}
arc_dataset <- data.frame()
or (i in 1:nrow(final_map_data)){
for (i in 1:nrow(final_map_data)){
# connection_map <- connection_map %>%
arc_dataset <- rbind(arc_dataset, gcIntermediate(c(final_map_data$wlong[i],final_map_data$wlat[i]), c(137,-23.2), n=50, addStartEnd=TRUE, breakAtDateLine=F))
# %>%
# addPolylines(weight=1, opacity=3, color="white")
}
View(arc_dataset)
arc_dataset %>%
leaflet()  %>% addTiles() %>%
addCircleMarkers(lng=final_map_data$wlong, lat=final_map_data$wlat,
popup=content, radius = 4, opacity = final_map_data$count) %>%
addMarkers(lng = 137, lat = -23.2,
label = "Australia",
labelOptions = labelOptions(noHide = T)) %>%
addPolylines()
?addPolylines
gcIntermediate(c(final_map_data$wlong[1],final_map_data$wlat[1]), c(137,-23.2), n=50, addStartEnd=TRUE, breakAtDateLine=F)
gcIntermediate(c(final_map_data$wlong[1],final_map_data$wlat[1]), c(137,-23.2), n=50, addStartEnd=TRUE, breakAtDateLine=F) %>%
leaflet()  %>% addTiles() %>%
addCircleMarkers(lng=final_map_data$wlong, lat=final_map_data$wlat,
popup=content, radius = 4, opacity = final_map_data$count) %>%
addMarkers(lng = 137, lat = -23.2,
label = "Australia",
labelOptions = labelOptions(noHide = T)) %>%
addPolylines()
gcIntermediate(c(final_map_data$wlong[2],final_map_data$wlat[2]), c(137,-23.2), n=50, addStartEnd=TRUE, breakAtDateLine=F) %>%
leaflet()  %>% addTiles() %>%
addCircleMarkers(lng=final_map_data$wlong, lat=final_map_data$wlat,
popup=content, radius = 4, opacity = final_map_data$count) %>%
addMarkers(lng = 137, lat = -23.2,
label = "Australia",
labelOptions = labelOptions(noHide = T)) %>%
addPolylines()
gcIntermediate(c(final_map_data$wlong[2],final_map_data$wlat[2]), c(137,-23.2), n=10, addStartEnd=TRUE, breakAtDateLine=F) %>%
leaflet()  %>% addTiles() %>%
addCircleMarkers(lng=final_map_data$wlong, lat=final_map_data$wlat,
popup=content, radius = 4, opacity = final_map_data$count) %>%
addMarkers(lng = 137, lat = -23.2,
label = "Australia",
labelOptions = labelOptions(noHide = T)) %>%
addPolylines()
gcIntermediate(c(final_map_data$wlong[2],final_map_data$wlat[2]), c(137,-23.2), n=5, addStartEnd=TRUE, breakAtDateLine=F) %>%
leaflet()  %>% addTiles() %>%
addCircleMarkers(lng=final_map_data$wlong, lat=final_map_data$wlat,
popup=content, radius = 4, opacity = final_map_data$count) %>%
addMarkers(lng = 137, lat = -23.2,
label = "Australia",
labelOptions = labelOptions(noHide = T)) %>%
addPolylines()
gcIntermediate(c(final_map_data$wlong[2],final_map_data$wlat[2]), c(137,-23.2), n=1, addStartEnd=TRUE, breakAtDateLine=F) %>%
leaflet()  %>% addTiles() %>%
addCircleMarkers(lng=final_map_data$wlong, lat=final_map_data$wlat,
popup=content, radius = 4, opacity = final_map_data$count) %>%
addMarkers(lng = 137, lat = -23.2,
label = "Australia",
labelOptions = labelOptions(noHide = T)) %>%
addPolylines()
gcIntermediate(c(final_map_data$wlong[2],final_map_data$wlat[2]), c(137,-23.2), n=1000, addStartEnd=TRUE, breakAtDateLine=F) %>%
leaflet()  %>% addTiles() %>%
addCircleMarkers(lng=final_map_data$wlong, lat=final_map_data$wlat,
popup=content, radius = 4, opacity = final_map_data$count) %>%
addMarkers(lng = 137, lat = -23.2,
label = "Australia",
labelOptions = labelOptions(noHide = T)) %>%
addPolylines()
gcIntermediate(c(final_map_data$wlong[2],final_map_data$wlat[2]), c(137,-23.2), n=1000, addStartEnd=TRUE, breakAtDateLine=T) %>%
leaflet()  %>% addTiles() %>%
addCircleMarkers(lng=final_map_data$wlong, lat=final_map_data$wlat,
popup=content, radius = 4, opacity = final_map_data$count) %>%
addMarkers(lng = 137, lat = -23.2,
label = "Australia",
labelOptions = labelOptions(noHide = T)) %>%
addPolylines()
?gcIntermediate
gcIntermediate(c(final_map_data$wlong[2],final_map_data$wlat[2]), c(137,-23.2), n=50, addStartEnd=TRUE, breakAtDateLine=F, sp = T) %>%
leaflet()  %>% addTiles() %>%
addCircleMarkers(lng=final_map_data$wlong, lat=final_map_data$wlat,
popup=content, radius = 4, opacity = final_map_data$count) %>%
addMarkers(lng = 137, lat = -23.2,
label = "Australia",
labelOptions = labelOptions(noHide = T)) %>%
addPolylines()
gcIntermediate(c(137,-23.2), c(final_map_data$wlong[2],final_map_data$wlat[2]), n=50, addStartEnd=TRUE, breakAtDateLine=F, sp = T) %>%
leaflet()  %>% addTiles() %>%
addCircleMarkers(lng=final_map_data$wlong, lat=final_map_data$wlat,
popup=content, radius = 4, opacity = final_map_data$count) %>%
addMarkers(lng = 137, lat = -23.2,
label = "Australia",
labelOptions = labelOptions(noHide = T)) %>%
addPolylines()
gcIntermediate(c(137,-23.2), c(final_map_data$wlong[2],final_map_data$wlat[2]), n=50, addStartEnd=TRUE) %>%
leaflet()  %>% addTiles() %>%
addCircleMarkers(lng=final_map_data$wlong, lat=final_map_data$wlat,
popup=content, radius = 4, opacity = final_map_data$count) %>%
addMarkers(lng = 137, lat = -23.2,
label = "Australia",
labelOptions = labelOptions(noHide = T)) %>%
addPolylines()
gcIntermediate(c(137,-23.2), c(final_map_data$wlong[2],final_map_data$wlat[2]), n=50, addStartEnd=FALSE, breakAtDateLine=F, sp = T) %>%
leaflet()  %>% addTiles() %>%
addCircleMarkers(lng=final_map_data$wlong, lat=final_map_data$wlat,
popup=content, radius = 4, opacity = final_map_data$count) %>%
addMarkers(lng = 137, lat = -23.2,
label = "Australia",
labelOptions = labelOptions(noHide = T)) %>%
addPolylines()
gcIntermediate(c(137,-23.2), c(final_map_data$wlong[2],final_map_data$wlat[2]), n=50) %>%
leaflet()  %>% addTiles() %>%
addCircleMarkers(lng=final_map_data$wlong, lat=final_map_data$wlat,
popup=content, radius = 4, opacity = final_map_data$count) %>%
addMarkers(lng = 137, lat = -23.2,
label = "Australia",
labelOptions = labelOptions(noHide = T)) %>%
addPolylines()
gcIntermediate(c(5,52), c(-120,37),
n=100,
addStartEnd=TRUE,
sp=TRUE) %>%
leaflet() %>%
addTiles() %>%
addPolylines()
gcIntermediate(c(final_map_data$wlong[2],final_map_data$wlat[2]), c(-120,37),
n=100,
addStartEnd=TRUE,
sp=TRUE) %>%
leaflet() %>%
addTiles() %>%
addPolylines()
gcIntermediate(c(final_map_data$wlong[2],final_map_data$wlat[2]), c(137,-23.2),
n=100,
addStartEnd=TRUE,
sp=TRUE) %>%
leaflet() %>%
addTiles() %>%
addPolylines()
gcIntermediate(c(final_map_data$wlong[10],final_map_data$wlat[10]), c(137,-23.2),
n=100,
addStartEnd=TRUE,
sp=TRUE) %>%
leaflet() %>%
addTiles() %>%
addPolylines()
gcIntermediate(c(final_map_data$wlong[2],final_map_data$wlat[2]), c(137,-23.2),
n=100,
addStartEnd=TRUE,
sp=TRUE) %>%
leaflet() %>%
addTiles() %>%
addPolylines()
=======
>>>>>>> main
knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
warning = FALSE)
library(tidyverse)
library(ggplot2)
library(sf)
<<<<<<< HEAD
library(broom)
library(readxl)
library(rgdal)
library(themis)
library(leaflet)
library(openxlsx)
library(geosphere)
gcIntermediate(c(final_map_data$wlong[2],final_map_data$wlat[2]), c(137,-23.2),
n=100,
addStartEnd=TRUE,
sp=TRUE) %>%
leaflet()  %>% addTiles() %>%
addCircleMarkers(lng=final_map_data$wlong, lat=final_map_data$wlat,
popup=content, radius = 4, opacity = final_map_data$count) %>%
addMarkers(lng = 137, lat = -23.2,
label = "Australia",
labelOptions = labelOptions(noHide = T)) %>%
addPolylines()
gcIntermediate(c(final_map_data$wlong[10],final_map_data$wlat[10]), c(137,-23.2),
n=100,
addStartEnd=TRUE,
sp=TRUE) %>%
leaflet()  %>% addTiles() %>%
addCircleMarkers(lng=final_map_data$wlong, lat=final_map_data$wlat,
popup=content, radius = 4, opacity = final_map_data$count) %>%
addMarkers(lng = 137, lat = -23.2,
label = "Australia",
labelOptions = labelOptions(noHide = T)) %>%
addPolylines()
cbind(gcIntermediate(c(final_map_data$wlong[1],final_map_data$wlat[1]), c(137,-23.2), n=50, addStartEnd=TRUE, breakAtDateLine=F), group = 1)
gc_intermediate <- data.frame()
gc_intermediate <- data.frame()
for (i in 1:nrow(final_map_data)){
dataframe1 <- cbind(gcIntermediate(c(final_map_data$wlong[i],final_map_data$wlat[i]), c(137,-23.2), n=50, addStartEnd=TRUE, breakAtDateLine=F), group = i)
gc_intermediate <- rbind(gc_intermediate,dataframe1)
gc_intermediate <- data.frame()
for (i in 1:nrow(final_map_data)){
dataframe1 <- cbind(gcIntermediate(c(final_map_data$wlong[i],final_map_data$wlat[i]), c(137,-23.2), n=50, addStartEnd=TRUE, breakAtDateLine=F), group = i)
gc_intermediate <- rbind(gc_intermediate,dataframe1)
}
View(gc_intermediate)
gc_intermediate %>%
leaflet()  %>% addTiles() %>%
addCircleMarkers(lng=final_map_data$wlong, lat=final_map_data$wlat,
popup=content, radius = 4, opacity = final_map_data$count) %>%
addMarkers(lng = 137, lat = -23.2,
label = "Australia",
labelOptions = labelOptions(noHide = T)) %>%
addPolylines(group = group)
leaflet()  %>% addTiles() %>%
addCircleMarkers(lng=final_map_data$wlong, lat=final_map_data$wlat,
popup=content, radius = 4, opacity = final_map_data$count) %>%
addMarkers(lng = 137, lat = -23.2,
label = "Australia",
labelOptions = labelOptions(noHide = T))
gc_intermediate %>%
leaflet()  %>% addTiles() %>%
addCircleMarkers(lng=final_map_data$wlong, lat=final_map_data$wlat,
popup=content, radius = 4, opacity = final_map_data$count) %>%
addMarkers(lng = 137, lat = -23.2,
label = "Australia",
labelOptions = labelOptions(noHide = T)) %>%
addPolylines(group = group)
gcIntermediate(c(final_map_data$wlong[10],final_map_data$wlat[10]), c(137,-23.2),
n=100,
addStartEnd=TRUE,
sp=TRUE)
a <- gcIntermediate(c(final_map_data$wlong[10],final_map_data$wlat[10]), c(137,-23.2),
n=100,
addStartEnd=TRUE,
sp=TRUE)
View(a)
a <- gcIntermediate(c(final_map_data$wlong,final_map_data$wlat), c(137,-23.2),
n=100,
addStartEnd=TRUE,
sp=TRUE)
class()
class(a)
l1 = cbind(c(1,2,3),c(3,2,2))
l1a = cbind(l1[,1]+.05,l1[,2]+.05)
l2 = cbind(c(1,2,3),c(1,1.5,1))
Sl1 = Line(l1)
Sl1a = Line(l1a)
Sl2 = Line(l2)
S1 = Lines(list(Sl1, Sl1a), ID="a")
View(S1)
?Line
?lines
?Lines
# # Binding shape files
# joint_data <- rbind(world_df, shapefile_df)
#
# ggplot() +
# geom_path(data = joint_data,
#           aes(x = long, y = lat, group = group),
#           color = 'Dark Green', size = .2)
final_map_data <- connection_data %>%
group_by(Virus, `Country of Origin`) %>%
summarise(count = sum(Count)) %>%
inner_join(. , world_df, by=c("Country of Origin"="wname"))%>%
group_by(Virus, `Country of Origin`) %>%
summarise(wlat = mean(wlat),
wlong = mean(wlong),
count  = mean(count)) %>%
rename(wname = "Country of Origin") %>%
filter(Virus == "Zika")
content <- paste(sep = "<br/>",
"Virus Imported from: ", "<b>", final_map_data$wname, "</b>",
"Type of Virus: ",  "<b>", final_map_data$`Virus`, "</b>",
"Total Imported Cases: ", "<b>", final_map_data$`count`, "</b>")
connection_map <- leaflet() %>%
addTiles() %>%
addCircleMarkers(lng=final_map_data$wlong, lat=final_map_data$wlat,
popup=content, radius = 4, opacity = final_map_data$count) %>%
addMarkers(lng = 137, lat = -23.2,
label = "Australia",
labelOptions = labelOptions(noHide = T))
connection_map
gc_intermediate <- data.frame()
for (i in 1:nrow(final_map_data)){
dataframe1 <- cbind(gcIntermediate(c(final_map_data$wlong[i],final_map_data$wlat[i]), c(137,-23.2),
n=100,
addStartEnd=TRUE,
sp=TRUE) , group = i)
gc_intermediate <- rbind(gc_intermediate,dataframe1)
}
connection_map <- leaflet() %>%
addTiles() %>%
addCircleMarkers(lng=final_map_data$wlong, lat=final_map_data$wlat,
popup=content, radius = 4, opacity = final_map_data$count) %>%
addMarkers(lng = 137, lat = -23.2,
label = "Australia",
labelOptions = labelOptions(noHide = T))  %>%
addPolylines(lng = c(final_map_data$wlong,137),
lat = c(final_map_data$wlat,-23.2), weight=3, opacity=3, color="white")
connection_map
connection_map <- leaflet() %>%
addTiles() %>%
addCircleMarkers(lng=final_map_data$wlong, lat=final_map_data$wlat,
popup=content, radius = 4, opacity = final_map_data$count) %>%
addMarkers(lng = 137, lat = -23.2,
label = "Australia",
labelOptions = labelOptions(noHide = T))  %>%
addPolylines( c(final_map_data$wlong,final_map_data$wlat),
c(137,-23.2), weight=3, opacity=3, color="white")
connection_map
connection_map <- leaflet() %>%
addTiles() %>%
addCircleMarkers(lng=final_map_data$wlong, lat=final_map_data$wlat,
popup=content, radius = 4, opacity = final_map_data$count) %>%
addMarkers(lng = 137, lat = -23.2,
label = "Australia",
labelOptions = labelOptions(noHide = T))  %>%
addPolylines(lng = c(final_map_data$wlong,137),
lat = c(final_map_data$wlat,-23.2), weight=3, opacity=3, color="white")
connection_map
?addPolylines
connection_map <- leaflet() %>%
addTiles() %>%
addCircleMarkers(lng=final_map_data$wlong, lat=final_map_data$wlat,
popup=content, radius = 4, opacity = final_map_data$count) %>%
addMarkers(lng = 137, lat = -23.2,
label = "Australia",
labelOptions = labelOptions(noHide = T))
for (i in 1:nrow(final_map_data)){
connection_map <- connection_map %>%
addPolylines(lng = c(final_map_data$wlong[i],137),
lat = c(final_map_data$wlat[i],-23.2), weight=3, opacity=3, color="white")
}
connection_map
connection_map <- leaflet() %>%
addTiles() %>%
addCircleMarkers(lng=final_map_data$wlong, lat=final_map_data$wlat,
popup=content, radius = 4, opacity = final_map_data$count) %>%
addMarkers(lng = 137, lat = -23.2,
label = "Australia",
labelOptions = labelOptions(noHide = T))
for (i in 1:nrow(final_map_data)){
connection_map <- connection_map %>%
addPolylines(lng = c(final_map_data$wlong[i],137),
lat = c(final_map_data$wlat[i],-23.2), weight=1, opacity=3, color="white")
}
connection_map
knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
warning = FALSE)
gcIntermediate(c(final_map_data$wlong[10],final_map_data$wlat[10]), c(137,-23.2),
n=100,
addStartEnd=TRUE,
sp=TRUE)
library(geosphere)
gcIntermediate(c(final_map_data$wlong[10],final_map_data$wlat[10]), c(137,-23.2),
n=100,
addStartEnd=TRUE,
sp=TRUE)
=======
# library(geojsonio)
library(broom)
# yearly <- file.choose()
# yearly_data <- read_csv(yearly)
full <- file.choose()
full_data <- read_csv(full)
sa3_geo_data <- st_as_sf(st_read("data/SA3_2011/SA3_2011_AUST.shp")) %>%
select(SA3_NAME11)
joint_data <- as_tibble(merge(full_data, sa3_geo_data, by.x = "SA3_NAME_2011", by.y = "SA3_NAME11"))
joint_data <- st_as_sf(joint_data, sf_column_name = "geometry")
# class(sa3_geo_data)
plot(sa3_geo_data, col="#f2f2f2", bg="skyblue", lwd=0.25, border=0 )
ggplot() + geom_polygon(data = sa3_geo_data, aes(x = long, y = lat, group = group), colour = "black", fill = NA)
knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
warning = FALSE)
library(tidyverse)
library(ggplot2)
library(sf)
# library(geojsonio)
library(broom)
library(readxl)
library(rgdal)
# yearly <- file.choose()
# yearly_data <- read_csv(yearly)
# full <- file.choose()
# full_data <- read_csv(full)
full_data <- read_csv(file.choose())
sa3_geo_data <- st_as_sf(st_read("data/SA3_2011/SA3_2011_AUST.shp")) %>%
select(SA3_NAME11)
joint_data <- as_tibble(merge(full_data, sa3_geo_data, by.x = "SA3_NAME_2011", by.y = "SA3_NAME11"))
joint_data <- st_as_sf(joint_data, sf_column_name = "geometry")
filename <- file.choose()
filename <- file.choose()
virus_list <-  c("Dengue",
"West_Nile_Kunjin",
"Zika",
"Chikungunya",
"Japanese_Encephalitis_Virus")
con_data <- data.frame()
for(i in 1:5)
{
con_data <- rbind(con_data, read_excel(filename, sheet = i) %>%
add_column(Virus = virus_list[i]))
}
plot(sa3_geo_data, col="#f2f2f2", bg="skyblue", lwd=0.25, border=0 )
ggplot() + geom_polygon(data = sa3_geo_data, aes(x = long, y = lat, group = group), colour = "black", fill = NA)
library(tidyverse)
library(ggplot2)
library(sf)
library(broom)
library(readxl)
library(rgdal)
knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
warning = FALSE)
library(tidyverse)
library(ggplot2)
library(sf)
library(broom)
library(readxl)
full_data <- read_csv(file.choose())
sa3_geo_data <- st_as_sf(st_read("data/SA3_2011/SA3_2011_AUST.shp")) %>%
select(SA3_NAME11)
getwd()
paste0(getwd(), "/Data/SA3_2011/")
shapefile <- readOGR(dsn = paste0(getwd(), "/Data/SA3_2011/"))
shapefile_df <- fortify(shapefile)
ggplot() +
geom_path(data = shapefile_df,
aes(x = long, y = lat, group = group),
color = 'gray', fill = 'white', size = .2)
View(shapefile_df)
ggplot() +
geom_path(data = shapefile_df,
aes(x = long, y = lat, group = group),
color = 'black', fill = 'white', size = .2)
knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
warning = FALSE)
library(tidyverse)
library(ggplot2)
library(sf)
library(broom)
library(readxl)
full_data <- read_csv(file.choose())
sa3_geo_data <- st_as_sf(st_read("data/SA3_2011/SA3_2011_AUST.shp")) %>%
select(SA3_NAME11)
shapefile <- readOGR(dsn = paste0(getwd(), "/Data/SA3_2011/"))
library(rgdal)
knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
warning = FALSE)
library(tidyverse)
library(ggplot2)
library(sf)
library(broom)
library(readxl)
library(rgdal)
full_data <- read_csv(file.choose())
sa3_geo_data <- st_as_sf(st_read("data/SA3_2011/SA3_2011_AUST.shp")) %>%
select(SA3_NAME11)
shapefile <- readOGR(dsn = paste0(getwd(), "/Data/SA3_2011/"))
shapefile_df <- fortify(shapefile)
ggplot() +
geom_path(data = shapefile_df,
aes(x = long, y = lat, group = group),
color = 'black', fill = 'white', size = .2)
joint_data <- as_tibble(merge(full_data, sa3_geo_data, by.x = "SA3_NAME_2011", by.y = "SA3_NAME11"))
joint_data <- st_as_sf(joint_data, sf_column_name = "geometry")
filename <- file.choose()
virus_list <-  c("Dengue",
"West_Nile_Kunjin",
"Zika",
"Chikungunya",
"Japanese_Encephalitis_Virus")
con_data <- data.frame()
for(i in 1:5)
{
con_data <- rbind(con_data, read_excel(filename, sheet = i) %>%
add_column(Virus = virus_list[i]))
}
knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
warning = FALSE)
library(tidyverse)
library(ggplot2)
library(sf)
library(broom)
library(readxl)
library(rgdal)
library(tigris)
full_data <- read_csv(file.choose())
shapefile <- readOGR(dsn = paste0(getwd(), "/Data/SA3_2011/"))
shapefile_df <- fortify(shapefile, region = "SA3_NAME11")
shapefile_df <- fortify(shapefile, region = "SA3_NAME11")
data_avg_2007 <- full_data %>%
group_by(SA3_NAME_2011, Year) %>%
summarise(mean_incidence_rate = mean(BFV_IRLA)) %>%
filter(Year == "2007")
shapefile_df <- shapefile_df %>%
left_join(. , data_avg_2007, by=c("id"="SA3_NAME_2011"))
View(shapefile_df)
ggplot() +
geom_path(data = shapefile_df,
aes(x = long, y = lat, group = group),
color = 'black', fill = 'white', size = .2)
ggplot() +
geom_polygon(data = shapefile_df,
aes(fill = mean_incidence_rate, x = long, y = lat, group = group)) +
theme_void() +
scale_fill_viridis(trans = "log", breaks=c(1,5,10,20,50,100)) +
coord_map()
library(viridis)
ggplot() +
geom_polygon(data = shapefile_df,
aes(fill = mean_incidence_rate, x = long, y = lat, group = group)) +
theme_void() +
scale_fill_viridis(trans = "log", breaks=c(1,5,10,20,50,100)) +
coord_map()
install.packages("piggyback")
knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
warning = FALSE)
library(tidyverse)
library(ggplot2)
library(sf)
library(broom)
library(readxl)
library(rgdal)
library(tigris)
full_data <- read_csv(file.choose())
shapefile <- readOGR(dsn = paste0(getwd(), "/Data/SA3_2011/"))
shapefile_df <- fortify(shapefile, region = "SA3_NAME11")
data_avg_2007 <- full_data %>%
group_by(SA3_NAME_2011, Year) %>%
summarise(mean_incidence_rate = mean(BFV_IRLA)) %>%
filter(Year == "2007")
shapefile_df <- shapefile_df %>%
left_join(. , data_avg_2007, by=c("id"="SA3_NAME_2011"))
ggplot() +
geom_path(data = shapefile_df,
aes(x = long, y = lat, group = group),
color = 'black', fill = 'white', size = .2)
library(viridis)
ggplot() +
geom_polygon(data = shapefile_df,
aes(fill = mean_incidence_rate, x = long, y = lat, group = group)) +
theme_void() +
scale_fill_viridis(trans = "log", breaks=c(1,5,10,20,50,100)) +
coord_map()
filename <- file.choose()
virus_list <-  c("Dengue",
"West_Nile_Kunjin",
"Zika",
"Chikungunya",
"Japanese_Encephalitis_Virus")
con_data <- data.frame()
for(i in 1:5)
{
con_data <- rbind(con_data, read_excel(filename, sheet = i) %>%
add_column(Virus = virus_list[i]))
}
knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
warning = FALSE)
>>>>>>> main
library(tidyverse)
library(ggplot2)
library(sf)
library(broom)
library(readxl)
library(rgdal)
<<<<<<< HEAD
library(themis)
library(leaflet)
library(openxlsx)
library(geosphere)
connection_map <- leaflet() %>%
addTiles() %>%
addCircleMarkers(lng=final_map_data$wlong, lat=final_map_data$wlat,
popup=content, radius = 4, opacity = final_map_data$count) %>%
addMarkers(lng = 137, lat = -23.2,
label = "Australia",
labelOptions = labelOptions(noHide = T))
for (i in 1:nrow(final_map_data)){
connection_map <- connection_map %>%
gcIntermediate(c(final_map_data$wlong[i],final_map_data$wlat[i]), c(137,-23.2), n= 200,
breakAtDateLine=FALSE, addStartEnd=TRUE, sp=TRUE) %>%
addPolylines(lng = c(final_map_data$wlong[i],137),
lat = c(final_map_data$wlat[i],-23.2), weight=1.5, opacity=3, color="pink")
}
a %>%
leaflet()  %>% addTiles() %>%
addCircleMarkers(lng=final_map_data$wlong, lat=final_map_data$wlat,
popup=content, radius = 4, opacity = final_map_data$count) %>%
addMarkers(lng = 137, lat = -23.2,
label = "Australia",
labelOptions = labelOptions(noHide = T)) %>%
addPolylines()
a <- gcIntermediate(c(final_map_data$wlong[10],final_map_data$wlat[10]), c(137,-23.2),
n=100,
addStartEnd=TRUE,
sp=TRUE)
a %>%
leaflet()  %>% addTiles() %>%
addCircleMarkers(lng=final_map_data$wlong, lat=final_map_data$wlat,
popup=content, radius = 4, opacity = final_map_data$count) %>%
addMarkers(lng = 137, lat = -23.2,
label = "Australia",
labelOptions = labelOptions(noHide = T)) %>%
addPolylines()
connection_map <- leaflet() %>%
addTiles() %>%
addCircleMarkers(lng=final_map_data$wlong, lat=final_map_data$wlat,
popup=content, radius = 4, opacity = final_map_data$count) %>%
addMarkers(lng = 137, lat = -23.2,
label = "Australia",
labelOptions = labelOptions(noHide = T))
for (i in 1:nrow(final_map_data))
b <- gcIntermediate(c(final_map_data$wlong[i],final_map_data$wlat[i]), c(137,-23.2),
n=100,
addStartEnd=TRUE,
sp=TRUE) {
b<- gcIntermediate(c(final_map_data$wlong,final_map_data$wlat), c(137,-23.2),
n=100,
addStartEnd=TRUE,
sp=TRUE)
for (i in 1:nrow(final_map_data)){
b<- gcIntermediate(c(final_map_data$wlong[i],final_map_data$wlat[i]), c(137,-23.2),
n=100,
addStartEnd=TRUE,
sp=TRUE)
}
b %>%
leaflet()  %>% addTiles() %>%
addCircleMarkers(lng=final_map_data$wlong, lat=final_map_data$wlat,
popup=content, radius = 4, opacity = final_map_data$count) %>%
addMarkers(lng = 137, lat = -23.2,
label = "Australia",
labelOptions = labelOptions(noHide = T)) %>%
addPolylines()
for (i in 1:nrow(final_map_data)){
b<- gcIntermediate(c(final_map_data$wlong[i],final_map_data$wlat), c(137,-23.2),
n=100,
addStartEnd=TRUE,
sp=TRUE) %>%
addPolylines()
}
for (i in 1:nrow(final_map_data)){
b<- gcIntermediate(c(final_map_data$wlong[i],final_map_data$wlat), c(137,-23.2),
n=100,
addStartEnd=TRUE,
sp=TRUE) %>%
addPolylines(lng = c(final_map_data$wlong[i],137),
lat = c(final_map_data$wlat[i],-23.2), weight=1.5, opacity=3, color="pink")
}
fulldata <- read_csv("~/Desktop/Internship/Documents/fulldata.csv")
View(fulldata)
fulldata <- read_csv("~/Desktop/Internship/Documents/fulldata.csv") %>%
pivot_longer(cols = c(35 : 55), #BFV_CountLA to CHIKV_CountIMP
names_to = "Virus",
values_to = "Value")
fulldata <- read_csv("~/Desktop/Internship/Documents/fulldata.csv") %>%
pivot_longer(cols = c(35 : 55), #BFV_CountLA to CHIKV_CountIMP
names_to = "Virus",
values_to = "Value") %>%
mutate(commute = ifelse(str_detect(Virus, "^(CountLA)"), "local_count",
ifelse(str_detect(Virus, "^(CountIMP)"), "imp_count",
ifelse(str_detect(Virus, "^(IRIMP)"), "imp_IR",
ifelse(str_detect(Virus, "^(IRLA)"), "la_IR","Na")))))
fulldata <- read_csv("~/Desktop/Internship/Documents/fulldata.csv") %>%
pivot_longer(cols = c(35 : 55), #BFV_CountLA to CHIKV_CountIMP
names_to = "Virus",
values_to = "Value") %>%
mutate(commute = ifelse(str_detect(Virus, "^(_CountLA)"), "local_count",
ifelse(str_detect(Virus, "^(_CountIMP)"), "imp_count",
ifelse(str_detect(Virus, "^(_IRIMP)"), "imp_IR",
ifelse(str_detect(Virus, "^(_IRLA)"), "la_IR","Na")))))
fulldata <- read_csv("~/Desktop/Internship/Documents/fulldata.csv") %>%
pivot_longer(cols = c(35 : 55), #BFV_CountLA to CHIKV_CountIMP
names_to = "Virus",
values_to = "Value") %>%
mutate(commute = ifelse(grepl(Virus, "_CountLA"), "local_count",
ifelse(grepl(Virus, "_CountIMP"), "imp_count",
ifelse(grepl(Virus, "_IRIMP"), "imp_IR",
ifelse(grepl(Virus, "_IRLA"), "la_IR","Na")))))
fulldata <- read_csv("~/Desktop/Internship/Documents/fulldata.csv") %>%
pivot_longer(cols = c(35 : 55), #BFV_CountLA to CHIKV_CountIMP
names_to = "Virus",
values_to = "Value")
fulldata$commute <- ifelse(grepl("_CountLA",fulldata$Virus),'local_count','inside')
fulldata$commute <- ifelse(grepl("_CountLA",fulldata$Virus),'local_count',
ifelse(grepl("_CountIMP",fulldata$Virus),'imp_count',
ifelse(grepl("_IRIMP",fulldata$Virus),'imp_IR',
ifelse(grepl("_IRLA",fulldata$Virus),'la_IR','na'))))
library(gapminder)
install.packages("gapminder")
library(gapminder)
gapminder
gapminder
fulldata <- read_csv("~/Desktop/Internship/Documents/fulldata.csv") %>%
pivot_longer(cols = c(35 : 55), #BFV_CountLA to CHIKV_CountIMP
names_to = "Virus",
values_to = "Value")
fulldata$commute <- ifelse(grepl("_CountLA",fulldata$Virus),'local_count',
ifelse(grepl("_CountIMP",fulldata$Virus),'imp_count','na'))
fulldata$IR <- ifelse(grepl("_IRIMP",fulldata$Virus),'imp_IR',
ifelse(grepl("_IRLA",fulldata$Virus),'la_IR','na'))
fulldata <- read_csv("~/Desktop/Internship/Documents/fulldata.csv") %>%
pivot_longer(cols = c(35 : 55), #BFV_CountLA to CHIKV_CountIMP
names_to = "Virus",
values_to = "Value")
fulldata$commute <- ifelse(grepl("_CountLA",fulldata$Virus),'local_count',
ifelse(grepl("_CountIMP",fulldata$Virus),'imp_count',
ifelse(grepl("_IRIMP",fulldata$Virus),'imp_IR',
ifelse(grepl("_IRLA",fulldata$Virus),'la_IR','na'))))
=======
library(tigris)
library(leaflet)
full_data <- read_csv(file.choose())
shapefile <- readOGR(dsn = paste0(getwd(), "/Data/SA3_2011/"))
shapefile_df <- fortify(shapefile, region = "SA3_NAME11")
data_avg_2007 <- full_data %>%
group_by(SA3_NAME_2011, Year) %>%
summarise(mean_incidence_rate = mean(BFV_IRLA)) %>%
filter(Year == "2007")
shapefile_df <- shapefile_df %>%
left_join(. , data_avg_2007, by=c("id"="SA3_NAME_2011"))
# ggplot() +
# geom_path(data = shapefile_df,
#           aes(x = long, y = lat, group = group),
#           color = 'black', fill = 'white', size = .2)
# library(viridis)
# ggplot() +
#   geom_polygon(data = shapefile_df,
#                aes(fill = mean_incidence_rate, x = long, y = lat, group = group)) +
#   theme_void() +
#   scale_fill_viridis(trans = "log", breaks=c(1,5,10,20,50,100)) +
#   coord_map()
# m <- leaflet(shapefile)
leaflet(shapefile) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~colorQuantile("YlOrRd", ALAND)(ALAND),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE))
# m <- leaflet(shapefile)
leaflet(shapefile) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = "red",
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE))
View(shapefile_df)
View(shapefile)
shapefile_temp <- shapefile
View(data_avg_2007)
View(shapefile_temp)
?geo_join
View(data_avg_2007)
shapefile_temp <- geo_join(shapefile, data_avg_2007, "SA3_NAME11", "SA3_NAME_2011")
View(shapefile_temp)
leaflet(shapefile_temp) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~colorQuantile("YlOrRd", mean_incidence_rate)(mean_incidence_rate),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE))
leaflet(shapefile_temp) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~colorNumeric("YlOrRd", mean_incidence_rate)(mean_incidence_rate),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE))
leaflet(shapefile_temp) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~colorNumeric("Blues", mean_incidence_rate)(mean_incidence_rate),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE))
leaflet(shapefile_temp) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
fillColor = ~colorNumeric("Blues", mean_incidence_rate)(mean_incidence_rate),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE))
leaflet(shapefile_temp) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
fillColor = ~colorNumeric("RdYlBu", mean_incidence_rate)(mean_incidence_rate),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE))
leaflet(shapefile_temp) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
fillColor = ~colorNumeric("Reds", mean_incidence_rate)(mean_incidence_rate),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE))
leaflet(shapefile_temp) %>%
addPolygons(weight = 1, smoothFactor = 0.5,
fillColor = ~colorNumeric("Reds", mean_incidence_rate)(mean_incidence_rate),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE))
leaflet(shapefile_temp) %>%
addPolygons(color = "#444444", weight = 0.5, smoothFactor = 1,
fillColor = ~colorNumeric("Reds", mean_incidence_rate)(mean_incidence_rate),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE))
leaflet(shapefile_temp) %>%
addPolygons(color = "#444444", weight = 0.5, smoothFactor = 0,
fillColor = ~colorNumeric("Reds", mean_incidence_rate)(mean_incidence_rate),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE))
shiny::runApp('ArbovirusesTransmission')
leaflet(shapefile_temp) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
fillColor = ~colorNumeric("RdYlBu", mean_incidence_rate)(mean_incidence_rate),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE))
leaflet(shapefile_temp) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
fillColor = ~colorNumeric("RdYlBu", mean_incidence_rate)(mean_incidence_rate),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE))
runApp('ArbovirusesTransmission')
runApp('ArbovirusesTransmission')
runApp('ArbovirusesTransmission')
runApp('ArbovirusesTransmission')
shiny::runApp('ArbovirusesTransmission')
runApp('ArbovirusesTransmission')
runApp('ArbovirusesTransmission')
runApp('ArbovirusesTransmission')
runApp('ArbovirusesTransmission')
runApp('ArbovirusesTransmission')
runApp('ArbovirusesTransmission')
runApp('ArbovirusesTransmission')
shiny::runApp('ArbovirusesTransmission')
shiny::runApp('ArbovirusesTransmission')
runApp('ArbovirusesTransmission')
shiny::runApp('ArbovirusesTransmission')
runApp('ArbovirusesTransmission')
runApp('ArbovirusesTransmission')
runApp('ArbovirusesTransmission')
runApp('ArbovirusesTransmission')
>>>>>>> main
