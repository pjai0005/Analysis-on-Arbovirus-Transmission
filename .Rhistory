panel.grid.major.x = element_line(size = 0.1, color = "black"),
panel.grid.minor.x = element_line(size = 0.1, color = "black"),
plot.title = element_text(size = 30),
plot.subtitle = element_text(size=18, face = "italic",
color = "black",  hjust = 0.5, vjust = -1),
plot.background = element_blank(),
plot.margin = margin(4, 4, 4, 4, "cm"))
anim_imp <- p.imp +
transition_states(Year, transition_length = 1, state_length = 1) +
view_follow(fixed_x = FALSE)  +
labs(title = 'Cumulative sum of Incidence rate for <b>Imported Viruses </b> in: <b> {closest_state} </b>',
subtitle  = " ")
animate(anim_imp, 100, fps = 10,  width = 1200, height = 1000,
renderer = gifski_renderer("gganim_imp.gif"))
library(RColorBrewer)
p.imp <- ggplot(animation_imp, aes(rank, group = Virus_Name,
fill = as.factor(Virus_Name),
color = as.factor(Virus_Name))) +
geom_tile(aes(y = IR/2,
height = IR,
width = 0.9), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(Virus_Name, " ")), vjust = 0.2, hjust = 1, size = 6) +
geom_text(aes(y = round(IR,2), label = round(IR_lbl,2), hjust = 0), size = 6) +
coord_flip(clip = "off", expand = FALSE) +
#scale_y_continuous(labels = scales::comma) +
scale_x_reverse() +
guides(color = FALSE, fill = FALSE) +
theme(axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = "none",
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_line(size = 0.1, color = "black"),
panel.grid.minor.x = element_line(size = 0.1, color = "black"),
plot.title = element_text(size = 30),
plot.subtitle = element_text(size=18, face = "italic",
color = "black",  hjust = 0.5, vjust = -1),
plot.background = element_blank(),
plot.margin = margin(4, 4, 4, 4, "cm"))+
scale_colour_brewer(palette = "Dark2")
anim_imp <- p.imp +
transition_states(Year, transition_length = 1, state_length = 1) +
view_follow(fixed_x = FALSE)  +
labs(title = 'Cumulative sum of Incidence rate for Imported Viruses in: {closest_state}',
subtitle  = " ")
animate(anim_imp, 100, fps = 5,  width = 1200, height = 1000,
renderer = gifski_renderer("gganim_imp.gif"))
p.imp <- ggplot(animation_imp, aes(rank, group = Virus_Name,
fill = as.factor(Virus_Name),
color = as.factor(Virus_Name))) +
geom_tile(aes(y = IR/2,
height = IR,
width = 0.9), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(Virus_Name, " ")), vjust = 0.2, hjust = 1, size = 6) +
geom_text(aes(y = round(IR,2), label = round(IR_lbl,2), hjust = 0), size = 6) +
coord_flip(clip = "off", expand = FALSE)+
scale_colour_brewer(palette = "Dark2") +
#scale_y_continuous(labels = scales::comma) +
scale_x_reverse() +
guides(color = FALSE, fill = FALSE) +
theme(axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = "none",
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_line(size = 0.1, color = "black"),
panel.grid.minor.x = element_line(size = 0.1, color = "black"),
plot.title = element_text(size = 30),
plot.subtitle = element_text(size=18, face = "italic",
color = "black",  hjust = 0.5, vjust = -1),
plot.background = element_blank(),
plot.margin = margin(4, 4, 4, 4, "cm"))+
scale_colour_brewer(palette = "Dark2")
anim_imp <- p.imp +
transition_states(Year, transition_length = 1, state_length = 1) +
view_follow(fixed_x = FALSE)  +
labs(title = 'Cumulative sum of Incidence rate for Imported Viruses in: {closest_state}',
subtitle  = " ")
animate(anim_imp, 100, fps = 5,  width = 1200, height = 1000,
renderer = gifski_renderer("gganim_imp.gif"))
p.imp <- ggplot(animation_imp, aes(rank, group = Virus_Name,
fill = as.factor(Virus_Name),
color = as.factor(Virus_Name))) +
geom_tile(aes(y = IR/2,
height = IR,
width = 0.9), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(Virus_Name, " ")), vjust = 0.2, hjust = 1, size = 6) +
geom_text(aes(y = round(IR,2), label = round(IR_lbl,2), hjust = 0), size = 6) +
coord_flip(clip = "off", expand = FALSE)+
scale_fill_brewer(palette = "Dark2") +
#scale_y_continuous(labels = scales::comma) +
scale_x_reverse() +
guides(color = FALSE, fill = FALSE) +
theme(axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = "none",
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_line(size = 0.1, color = "black"),
panel.grid.minor.x = element_line(size = 0.1, color = "black"),
plot.title = element_text(size = 30),
plot.subtitle = element_text(size=18, face = "italic",
color = "black",  hjust = 0.5, vjust = -1),
plot.background = element_blank(),
plot.margin = margin(4, 4, 4, 4, "cm"))+
scale_colour_brewer(palette = "Dark2")
anim_imp <- p.imp +
transition_states(Year, transition_length = 1, state_length = 1) +
view_follow(fixed_x = FALSE)  +
labs(title = 'Cumulative sum of Incidence rate for Imported Viruses in: {closest_state}',
subtitle  = " ")
animate(anim_imp, 100, fps = 5,  width = 1200, height = 1000,
renderer = gifski_renderer("gganim_imp.gif"))
p.local <- ggplot(animation_local, aes(rank, group = Virus_Name,
fill = as.factor(Virus_Name),
color = as.factor(Virus_Name))) +
geom_tile(aes(y = IR/2,
height = IR,
width = 0.9), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(Virus_Name, " ")), vjust = 0.2, hjust = 1, size = 6) +
geom_text(aes(y = round(IR,2), label = round(IR_lbl,2), hjust = 0), size = 6) +
coord_flip(clip = "off", expand = FALSE)+
scale_fill_brewer(palette = "Dark2") +
#scale_y_continuous(labels = scales::comma) +
scale_x_reverse() +
guides(color = FALSE, fill = FALSE) +
theme(axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = "none",
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_line(size = 0.1, color = "black"),
panel.grid.minor.x = element_line(size = 0.1, color = "black"),
plot.title = element_text(size = 30),
plot.subtitle = element_text(size=18, face = "italic",
color = "black",  hjust = 0.5, vjust = -1),
plot.background = element_blank(),
plot.margin = margin(4, 4, 4, 4, "cm"))+
scale_colour_brewer(palette = "Dark2")
anim_local <- p.local +
transition_states(Year, transition_length = 1, state_length = 1) +
view_follow(fixed_x = FALSE)  +
labs(title = 'Cumulative sum of Incidence rate for Local Viruses in: {closest_state}',
subtitle  = " ")
animate(anim_local, 100, fps = 5,  width = 1200, height = 1000,
renderer = gifski_renderer("gganim_imp.gif"))
p.imp <- ggplot(animation_imp, aes(rank, group = Virus_Name,
fill = as.factor(Virus_Name),
color = as.factor(Virus_Name))) +
geom_tile(aes(y = IR/2,
height = IR,
width = 0.9), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(Virus_Name, " ")), vjust = 0.2, hjust = 1, size = 6) +
geom_text(aes(y = round(IR,2), label = round(IR_lbl,2), hjust = 0), size = 6) +
coord_flip(clip = "off", expand = FALSE)+
scale_fill_brewer(palette = "Dark2") +
#scale_y_continuous(labels = scales::comma) +
scale_x_reverse() +
guides(color = FALSE, fill = FALSE) +
theme(axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = "none",
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_line(size = 0.1, color = "black"),
panel.grid.minor.x = element_line(size = 0.1, color = "black"),
plot.title = element_text(size = 30),
plot.subtitle = element_text(size=18, face = "italic",
color = "black",  hjust = 0.5, vjust = -1),
plot.background = element_blank(),
plot.margin = margin(4, 4, 4, 4, "cm"))+
scale_colour_brewer(palette = "Dark2")
anim_imp <- p.imp +
transition_states(Year, transition_length = 1, state_length = 1) +
view_follow(fixed_x = FALSE)  +
labs(title = 'Cumulative sum of Incidence rate for Imported Viruses in: {closest_state}',
subtitle  = " ")
animate(anim_imp, 100, fps = 5,  width = 1200, height = 1000,
renderer = gifski_renderer("gganim_imp.gif"))
p.local <- ggplot(animation_local, aes(rank, group = Virus_Name,
fill = as.factor(Virus_Name),
color = as.factor(Virus_Name))) +
geom_tile(aes(y = IR/2,
height = IR,
width = 0.9), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(Virus_Name, " ")), vjust = 0.2, hjust = 1, size = 6) +
geom_text(aes(y = round(IR,2), label = round(IR_lbl,2), hjust = 0), size = 6) +
coord_flip(clip = "off", expand = FALSE)+
scale_fill_brewer(palette = "Dark2") +
#scale_y_continuous(labels = scales::comma) +
scale_x_reverse() +
guides(color = FALSE, fill = FALSE) +
theme(axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = "none",
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_line(size = 0.1, color = "black"),
panel.grid.minor.x = element_line(size = 0.1, color = "black"),
plot.title = element_text(size = 30),
plot.subtitle = element_text(size=18, face = "italic",
color = "black",  hjust = 0.5, vjust = -1),
plot.background = element_blank(),
plot.margin = margin(4, 4, 4, 4, "cm"))+
scale_colour_brewer(palette = "Dark2")
anim_local <- p.local +
transition_states(Year, transition_length = 1, state_length = 1) +
view_follow(fixed_x = FALSE)  +
labs(title = 'Cumulative sum of Incidence rate for Local Viruses in: {closest_state}',
subtitle  = " ")
animate(anim_local, 100, fps = 5,  width = 1200, height = 1000,
renderer = gifski_renderer("gganim_local.gif"))
knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
warning = FALSE)
library(tidyverse)
library(ggplot2)
library(sf)
library(broom)
library(readxl)
library(rgdal)
library(themis)
library(leaflet)
library(openxlsx)
library(geosphere)
library(readr)
library(RColorBrewer)
filename <- file.choose()
virus_list <-  c("Dengue",
"West_Nile_Kunjin",
"Zika",
"Chikungunya",
"Japanese_Encephalitis_Virus")
connection_data <- data.frame()
for(i in 1:5)
{
connection_data <- rbind(connection_data, read_excel(imported, sheet = i) %>%
add_column(Virus = virus_list[i]))
}
# SA3 Shape File
shapefile_df <- readOGR(dsn = paste0(getwd(), "/Data/SA3_2011/")) %>%
fortify(region = "SA3_NAME11") %>%
rename(alat = lat,
along = long,
aname = id)
# World Data Shape File
world_df <- readOGR(
dsn= paste0(getwd(),"/DATA/World_Shapefile/") ,
layer="TM_WORLD_BORDERS_SIMPL-0.3",
verbose=FALSE) %>% fortify(region = "NAME") %>%
rename(wlat = lat,
wlong = long,
wname = id)
imported <- file.choose()
virus_list <-  c("Dengue",
"West_Nile_Kunjin",
"Zika",
"Chikungunya",
"Japanese_Encephalitis_Virus")
connection_data <- data.frame()
for(i in 1:5)
{
connection_data <- rbind(connection_data, read_excel(imported, sheet = i) %>%
add_column(Virus = virus_list[i]))
}
connection_data <- connection_data %>%
filter(!`Country of Origin` %in% c("No data available", "Overseas - Country unknown",
"At Sea", "Unknown", "No data supplied", "Australia") &
!`Residential location (SA3)` %in% c("No data available", "Overseas - Country unknown",
"At Sea", "No data supplied", "Unknown")) %>%
mutate(`Country of Origin` =
ifelse(`Country of Origin` =="China (excludes SARs and Taiwan)", "China",
ifelse(`Country of Origin` == "Venezuela, Bolivarian Republic of", "Venezuela",
ifelse(`Country of Origin` == "Samoa, American", "Samoa",
ifelse(`Country of Origin` == "Bolivia, Plurinational State of", "Bolivia",
ifelse(`Country of Origin` == "Congo, Democratic Republic of", "Congo",
ifelse(`Country of Origin` == "Macau (SAR of China)", "Macau",
ifelse(`Country of Origin` == "United Kingdom, Channel Islands and Isle of Man", "United Kingdom",
ifelse(`Country of Origin` == "Hong Kong (SAR of China)", "Hong Kong",
ifelse(`Country of Origin` == "Congo, Republic of", "Congo",
ifelse(`Country of Origin` == "Myanmar, The Republic of the Union of", "Myanmar", `Country of Origin`)))))))))))
connection_data <- connection_data[!grepl("nfd|nec", connection_data$`Country of Origin`),]
sa3_geo_data <- st_as_sf(st_read("data/SA3_2011/SA3_2011_AUST.shp")) %>%
select(SA3_NAME11)
shapefile <- readOGR(dsn = paste0(getwd(), "/Data/SA3_2011/"))
shapefile_df <- fortify(shapefile)
ggplot() +
geom_path(data = shapefile_df,
aes(x = long, y = lat, group = group),
color = 'black', fill = 'white', size = .2)
joint_data <- as_tibble(merge(full_data, sa3_geo_data, by.x = "SA3_NAME_2011", by.y = "SA3_NAME11"))
# cleaning full data
fulldata <- read_csv(file.choose()) %>%
pivot_longer(cols = c("BFV_CountLA" : "CHIKV_CountIMP"), #BFV_CountLA to CHIKV_CountIMP
names_to = "Virus",
values_to = "Value")
# # Binding shape files
# joint_data <- rbind(world_df, shapefile_df)
#
# ggplot() +
# geom_path(data = joint_data,
#           aes(x = long, y = lat, group = group),
#           color = 'Dark Green', size = .2)
final_map_data <- connection_data %>%
group_by(Virus, `Country of Origin`) %>%
summarise(count = sum(Count)) %>%
inner_join(. , world_df, by=c("Country of Origin"="wname"))%>%
group_by(Virus, `Country of Origin`) %>%
summarise(wlat = mean(wlat),
wlong = mean(wlong),
count  = mean(count)) %>%
rename(wname = "Country of Origin") %>%
filter(Virus == "Zika")
content <- paste(sep = "<br/>",
"Virus Imported from: ", "<b>", final_map_data$wname, "</b>",
"Type of Virus: ",  "<b>", final_map_data$`Virus`, "</b>",
"Total Imported Cases: ", "<b>", final_map_data$`count`, "</b>")
connection_map <- leaflet() %>%
addProviderTiles(providers$Esri.WorldStreetMap) %>%
addCircleMarkers(lng=final_map_data$wlong, lat=final_map_data$wlat,
popup=content, radius = 4, opacity = final_map_data$count) %>%
addMarkers(lng = 137, lat = -23.2,
labelOptions = labelOptions(noHide = T))
for (i in 1:nrow(final_map_data)){
connection_map <- connection_map %>%
addPolylines(lng = c(final_map_data$wlong[i],137),
lat = c(final_map_data$wlat[i],-23.2), weight=1.5, opacity=2, color="pink")
}
connection_map %>%  setView(0, 0, zoom = 1.4)
# cleaning full data
fulldata <- read_csv(file.choose()) %>%
pivot_longer(cols = c("BFV_CountLA" : "CHIKV_CountIMP"), #BFV_CountLA to CHIKV_CountIMP
names_to = "Virus",
values_to = "Value")
# Count local or imported
fulldata$Commute_Count <- ifelse(grepl("_CountLA",fulldata$Virus),'local_count',
ifelse(grepl("_CountIMP",fulldata$Virus),'imp_count','na'))
# IR local or imported
fulldata$Commute_IR <-
ifelse(grepl("_IRIMP",fulldata$Virus),'imp_IR',
ifelse(grepl("_IRLA",fulldata$Virus),'local_IR','na'))
# transmission local or imported
fulldata$Transmission <-
ifelse(grepl("local_IR",fulldata$Commute_IR) |
grepl("local_count",fulldata$Commute_Count) ,'Local',
ifelse(grepl("imp_IR",fulldata$Commute_IR) |
grepl("imp_count",fulldata$Commute_Count),'Imported','na'))
# virus names
fulldata$Virus_Name <-
ifelse(grepl("BFV_",fulldata$Virus),'BFV',
ifelse(grepl("RRV_",fulldata$Virus),'RRV',
ifelse(grepl("DENV_",fulldata$Virus),'DENV',
ifelse(grepl("ZIKV_",fulldata$Virus),'ZIKV',
ifelse(grepl("MVEV_",fulldata$Virus),'MVEV',
ifelse(grepl("JEV_",fulldata$Virus),'JEV',
ifelse(grepl("WNV_",fulldata$Virus),'WNV',
ifelse(grepl("CHIKV_",fulldata$Virus),'CHIKV','na'))))))))
# data wrangling cleaned data for animation
animation <- fulldata %>%
pivot_wider(names_from = c(Commute_Count, Commute_IR) ,
values_from = Value) %>%
pivot_longer(cols = c(local_count_na, imp_count_na),
names_to = "Count_Type",
values_to = "Count")%>%
pivot_longer(cols = c(na_local_IR, na_imp_IR),
names_to = "IR_Type",
values_to = "IR") %>%
select(Year, Virus_Name, Transmission, IR, Count) %>%
group_by(Year, Transmission, Virus_Name ) %>%
summarise(IR = sum(IR, na.rm = TRUE),
Count = sum(Count, na.rm = TRUE)) %>%
as.data.frame()
# animation for imported virus
animation_imp <- animation %>%
filter(Transmission == "Imported") %>%
group_by(Year) %>%
mutate(rank = rank(-IR),
IR_rel =  round(IR/IR[rank==1], 2),
IR_lbl = round(IR, 2)) %>%
group_by(Virus_Name) %>% ungroup()
# animation for local virus
animation_local <- animation %>%
filter(Transmission == "Local") %>%
group_by(Year) %>%
mutate(rank = rank(-IR),
IR_rel = round(IR/IR[rank==1], 2),
IR_lbl = round(IR, 2)) %>%
group_by(Virus_Name) %>%
ungroup()
p.local <- ggplot(animation_local, aes(rank, group = Virus_Name,
fill = as.factor(Virus_Name),
color = as.factor(Virus_Name))) +
geom_tile(aes(y = IR/2,
height = IR,
width = 0.9), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(Virus_Name, " ")), vjust = 0.2, hjust = 1, size = 6) +
geom_text(aes(y = round(IR,2), label = round(IR_lbl,2), hjust = 0), size = 6) +
coord_flip(clip = "off", expand = FALSE)+
scale_fill_brewer(palette = "Dark2") +
#scale_y_continuous(labels = scales::comma) +
scale_x_reverse() +
guides(color = FALSE, fill = FALSE) +
theme(axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = "none",
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_line(size = 0.1, color = "black"),
panel.grid.minor.x = element_line(size = 0.1, color = "black"),
plot.title = element_text(size = 30),
plot.subtitle = element_text(size=18, face = "italic",
color = "black",  hjust = 0.5, vjust = -1),
plot.background = element_blank(),
plot.margin = margin(4, 4, 4, 4, "cm"))+
scale_colour_brewer(palette = "Dark2")
anim_local <- p.local +
transition_states(Year, transition_length = 1, state_length = 1) +
view_follow(fixed_x = FALSE)  +
labs(title = 'Cumulative sum of Incidence rate for Local Viruses in: {closest_state}',
subtitle  = " ")
animate(anim_local, 100, fps = 5,  width = 1200, height = 1000,
renderer = gifski_renderer("gganim_local.gif"))
#animation for imported virus
p.imp <- ggplot(animation_imp, aes(rank, group = Virus_Name,
fill = as.factor(Virus_Name),
color = as.factor(Virus_Name))) +
geom_tile(aes(y = IR/2,
height = IR,
width = 0.9), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(Virus_Name, " ")), vjust = 0.2, hjust = 1, size = 6) +
geom_text(aes(y = round(IR,2), label = round(IR_lbl,2), hjust = 0), size = 6) +
coord_flip(clip = "off", expand = FALSE)+
scale_fill_brewer(palette = "Dark2") +
scale_x_reverse() +
guides(color = FALSE, fill = FALSE) +
theme(axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = "none",
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_line(size = 0.1, color = "black"),
panel.grid.minor.x = element_line(size = 0.1, color = "black"),
plot.title = element_text(size = 30),
plot.subtitle = element_text(size=18, face = "italic",
color = "black",  hjust = 0.5, vjust = -1),
plot.background = element_blank(),
plot.margin = margin(4, 4, 4, 4, "cm"))+
scale_colour_brewer(palette = "Dark2")
anim_imp <- p.imp +
transition_states(Year, transition_length = 1, state_length = 1) +
view_follow(fixed_x = FALSE)  +
labs(title = 'Cumulative sum of Incidence rate for Imported Viruses in: {closest_state}',
subtitle  = " ")
animate(anim_imp, 100, fps = 5,  width = 1200, height = 1000,
renderer = gifski_renderer("Animation/gganim_imp.gif"))
full_data <- read_csv(file.choose())
shapefile <- readOGR(dsn = paste0(getwd(), "/Data/SA3_2011/"))
shapefile_df <- fortify(shapefile)
ggplot() +
geom_path(data = shapefile_df,
aes(x = long, y = lat, group = group),
color = 'black', fill = 'white', size = .2)
joint_data <- as_tibble(merge(full_data, sa3_geo_data, by.x = "SA3_NAME_2011", by.y = "SA3_NAME11"))
joint_data <- st_as_sf(joint_data, sf_column_name = "geometry")
